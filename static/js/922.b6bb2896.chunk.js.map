{"version":3,"file":"static/js/922.b6bb2896.chunk.js","mappings":"4OA6FA,EAlFqB,WACnB,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAUjB,IARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaZ,GAAIa,KAAKT,EACvB,GAAE,CAACJ,KAEJW,EAAAA,EAAAA,YAAU,YACRG,EAAAA,EAAAA,IAAYd,GAAIa,KAAKP,EACtB,GAAE,CAACN,KAECG,EACH,OAAO,KAGT,IAAKE,EACH,OAAO,KAGT,IAEQU,EAA6DZ,EAA7DY,MAAOC,EAAsDb,EAAtDa,YAAaC,EAAyCd,EAAzCc,aAAcC,EAA2Bf,EAA3Be,aAAcC,EAAahB,EAAbgB,SAExD,OACE,iCACE,mBAAQC,UAAU,oBAAoBC,QANtB,0BAAMZ,EAAQ,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUe,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IAAxC,EAMhB,mBAGA,iBAAKH,UAAU,0BAAf,WACE,gBACEA,UAAU,oBACVI,IAAG,6CAAwCR,GAC3CS,IAAKV,EACLW,MAAM,SAER,iBAAKN,UAAU,qBAAf,WACE,gBAAIA,UAAU,sBAAd,UACGL,EADH,KACYE,EAAaU,MAAM,KAAK,GADpC,QAGA,eAAGP,UAAU,0BAAb,WACE,uCADF,IACiD,GAA3BQ,KAAKC,MAAMX,GADjC,QAIA,eAAIE,UAAU,2BAAd,uBACA,cAAGA,UAAU,0BAAb,SAAwCD,KAExC,eAAIC,UAAU,2BAAd,qBACA,gBAAKA,UAAU,uBAAf,SACGf,EAAOyB,KAAI,SAAAC,GACV,OAAO,uBAAmBA,EAAMC,MAAjBD,EAAM/B,GACtB,aAKP,gBAAIoB,UAAU,qBAAd,WACE,cAAGA,UAAU,qBAAb,UACE,qDAEF,yBACE,SAAC,KAAD,CAAMA,UAAU,OAAOa,GAAG,OAAOX,MAAOf,EAASe,MAAOY,SAAO,EAA/D,qBAIF,yBACE,SAAC,KAAD,CAAMd,UAAU,OAAOa,GAAG,UAAUX,MAAOf,EAASe,MAAOY,SAAO,EAAlE,2BAMJ,SAAC,EAAAC,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Suspense, useEffect, useState } from 'react';\nimport {\n  useParams,\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { getMovieById, fetchGenres } from 'services/movieApi';\nimport './MovieDetails.css';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [genres, setGenres] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getMovieById(id).then(setMovie);\n  }, [id]);\n\n  useEffect(() => {\n    fetchGenres(id).then(setGenres);\n  }, [id]);\n\n  if (!movie) {\n    return null;\n  }\n\n  if (!genres) {\n    return null;\n  }\n\n  const handleClick = () => navigate(location?.state?.from ?? '/');\n\n  const { title, poster_path, release_date, vote_average, overview } = movie;\n\n  return (\n    <>\n      <button className=\"movie_details-btn\" onClick={handleClick}>\n        Back\n      </button>\n      <div className=\"movie_details-container\">\n        <img\n          className=\"movie_details-img\"\n          src={`https://image.tmdb.org/t/p/original${poster_path}`}\n          alt={title}\n          width=\"250\"\n        />\n        <div className=\"movie_details-info\">\n          <h2 className=\"movie_details-title\">\n            {title} ({release_date.split('-')[0]})\n          </h2>\n          <p className=\"movie_details-info-text\">\n            <b>User score:</b> {Math.floor(vote_average) * 10}%\n          </p>\n\n          <h3 className=\"movie_details-info-title\">Overview</h3>\n          <p className=\"movie_details-info-text\">{overview}</p>\n\n          <h3 className=\"movie_details-info-title\">Genres</h3>\n          <div className=\"movie_details-genres\">\n            {genres.map(genre => {\n              return <p key={genre.id}>{genre.name}</p>;\n            })}\n          </div>\n        </div>\n      </div>\n\n      <ul className=\"movie_details-list\">\n        <p className=\"movie_details-text\">\n          <b>Additional information</b>\n        </p>\n        <li>\n          <Link className=\"text\" to=\"cast\" state={location.state} replace>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link className=\"text\" to=\"reviews\" state={location.state} replace>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["id","useParams","useState","movie","setMovie","genres","setGenres","location","useLocation","navigate","useNavigate","useEffect","getMovieById","then","fetchGenres","title","poster_path","release_date","vote_average","overview","className","onClick","state","from","src","alt","width","split","Math","floor","map","genre","name","to","replace","Suspense","fallback"],"sourceRoot":""}